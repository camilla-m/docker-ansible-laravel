---
- name: "Ansible Create EC2"
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
  - ec2:
      key_name: camidevops
      region: sa-east-1
      instance_type: t2.micro
      image: ami-013dd6e24f90aa93f
      wait: yes
      count: 1
      group: default
      instance_tags:
        Name: "{{nameinvault}}"
      monitoring: yes
      termination_protection: no
      assign_public_ip: yes
      vpc_subnet_id: subnet-f429a1af
    register: deviceidlaunch

  - name: allocate a new elastic IP and associate it with an instance
    ec2_eip:
      device_id: "{{ deviceidlaunch.instance_ids[0] }}" #"{{ item }}"
      region: us-east-2
    #loop: "{{ deviceidlaunch.instance_ids }}"
    register: elasticip

  - name: output the IP
    debug:
      msg: "Allocated IP inside a VPC is {{ elasticip.public_ip }}"

  - name: example using security group rule descriptions
    ec2_group:
      name: "default"
      description: default VPC security group
      vpc_id: vpc-fdfded9a
      profile: "default"
      region: sa-east-1
      purge_rules: no
      rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: "{{ elasticip.public_ip }}/32"
          rule_desc: "{{nameinvault}}"

  - name: Wait for SSH to come up
    delegate_to: "{{ elasticip.public_ip }}"
    wait_for_connection:
      delay: 60
      timeout: 120
    become: yes
    remote_user: ec2-user

  - name: Cat hosts
    command: cat /etc/ansible/hosts
    register: hostsfileansible

  - name: Add a line to ansible hosts
    lineinfile:
      path: /etc/ansible/hosts
      line: "[{{nameinvault}}]\n{{elasticip.public_ip}}\tansible_ssh_private_key_file=/home/ubuntu/ansible-lives/camidevops.pem"
      create: yes
    become: yes
    become_user: root
    when: '"{{nameinvault}}" not in hostsfileansible.stdout' #comentar o verbose

  - name: run playbook
    command: ansible-playbook playbook-docker.yml
    become: yes